name: Pre-Releases

on:
    push:
        branches:
            - feature/**

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
              with:
                  fetch-depth: "0"
            - name: Zip Folder
              run: zip -r release.zip . -x ".git/*" ".github/*" ".gitignore" "gulpfile.js" '.npmignore' "scss/*"
            - name: Bump version and push tag
              id: bump_version
              uses: anothrNick/github-tag-action@1.36.0
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  WITH_V: true
                  INITIAL_VERSION: 0.0.0
                  DEFAULT_BUMP: patch
                  REPO_OWNER: Unoblueboy
            - name: Create Release
              id: create_release
              uses: actions/create-release@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  tag_name: ${{ steps.bump_version.outputs.new_tag }}
                  release_name: Release ${{ steps.bump_version.outputs.new_tag }}
                  draft: false
                  prerelease: true
            - name: Upload Release Zip
              id: upload-release-zip
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
                  asset_path: ./release.zip
                  asset_name: release.zip
                  asset_content_type: application/zip
            - name: Update Manifest URL for pre-releases
              run: python ./.github/workflows/update_system_manifest.py "feature" ${{ steps.create_release.outputs.html_url }} ${{ steps.create_release.outputs.new_tag }}
            - name: Upload Release Json
              id: upload-release-json
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: ./updated_system.json
                  asset_name: system.json
                  asset_content_type: application/json
